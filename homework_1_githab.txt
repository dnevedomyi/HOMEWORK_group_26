
GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.  to
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.








JSON


 4. Создать внешний репозиторий c названием JSON. ==  перейти во вкладку "Repositories"-->
                                                      нажать кнопку "New" -->
                                                      задать имя и выставить необходимые настройки --> 
                                                      нажать  "Creat repository


 5. Клонировать репозиторий JSON на локальный компьютер. == git clone https://github.com/ivanmihalutsa/JSON.git --> cd JSON
 
 6. Внутри локального JSON создать файл “new.json”. == touch new.json

 7. Добавить файл под гит.== git add new.json

 8. Закоммитить файл. == git commit -m 'Add to JSON file'

 9. Отправить файл на внешний GitHub репозиторий. == git push



 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).

 Всё написать в формате JSON.== vim new.json --> {"FIO" : "mMikhalutsa Ivan Georgievic",
                                                 "age" : "36",
                                                 "animal" : "0",
                                                 "salary" : "400"  }


 11. Отправить изменения на внешний репозиторий.== git add . -->  git commit -m "qwerty" --> git push

 12. Создать файл preferences.json == touch preferences.json


 13. В файл preferences.json добавить информацию о своих предпочтениях 

(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить)

 в формате JSON. == vim preferences.json { "muvie" : "terminator",
                                           "favorite TV series" : "supernatural",
                                           "favorite food" :"plov",
                                           "favorite time of the year" : "winter",
                                           "the party you would like to visit" : "Moldova"}


 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе

 в формате JSON == touch sklls.json --> vim sklls.json --> { "skill" : "soft",
                                                             "skill" : "hard"}



 15. Отправить сразу 2 файла на внешний репозиторий. == git add . --> git commit -m 'sklls.json' --> git commit -m 'preferences.json' --> git add . --> git push

 16. На веб интерфейсе создать файл bug_report.json. == touch bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.== git add . --> git commit -m 'bug_report.json'

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт

 в формате JSON. == vim bug_report.json --> { "Summary":"Login: Error messages in the login form are displayed in English",
                                              "Environment":"All browsers / devices",
                                              "Severity":"Major",
                                              "Steps to reproduce": [
                                              "1. Open front end https:/www.test-obelink.be:8443/",
                                              "2. Follow Inloggen link",
                                              "3.Fill required fields with invalid data",
                                              "4.Click Inloggen button",
                                              "5.Pay attention to error messages", ]
                                              "Actual result":"Error messages in the login form are displayed in English",
                                              "Expected result":"Error messages in the login form are displayed in the chosen language"
                                              "Attachment":"http://prntser.com/k905cq" }



 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.== git add . --> git commit -m 'bug_report.json'

 20. Синхронизировать внешний и локальный репозиторий JSON == git pull



=======================================================================================================================================================================


XML


 21. Создать внешний репозиторий c названием XML.== перейти во вкладку "Repositories"-->
                                                      нажать кнопку "New" -->
                                                      задать имя и выставить необходимые настройки --> 
                                                      нажать  "Creat repository


 22. Клонировать репозиторий XML на локальный компьютер.== git clone https://github.com/ivanmihalutsa/XML.git

 23. Внутри локального XML создать файл “new.xml”. == touch new.xml

 24. Добавить файл под гит. == git add new.xml

 25. Закоммитить файл.== git commit -m "add  new.xml fail"

 26. Отправить файл на внешний GitHub репозиторий. == git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).

 Всё написать в формате XML. == vim new.xml == <users>
                                                     <user FIO="Mikhalutsa Ivan Georgievic">
                                                     <age>36</age>
                                                     <animal>0</animal>
                                                     <salary>400</salary>
                                               </user>


 28. Отправить изменения на внешний репозиторий. == git commit -m "add  new.xml fail" --> git add .--> git push

 29. Создать файл preferences.xml == touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить)

 в формате XML. == vim preferences.xml == <users>
                                                <muvie>Terminator<muvie>
                                                <favorite TV series>supernatural<favorite TV series>
                                                <favorite food>plov<favorite food>
                                                <favorite time of the year>winter<favorite time of the year>
                                                <the party you would like to visit>Moldova<the party you would like to visit>
                                          </users>



 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML == touch sklls.xml --> vim sklls.xm --> <users>
                                                                                                                                                     <skills>Hard skils<skills>
                                                                                                                                                     <skills>Soft skils<skills>
                                                                                                                                               </users>
 32. Сделать коммит в одну строку. == git add .

 33. Отправить сразу 2 файла на внешний репозиторий. == git commit -a -m "MY MESSAGE HERE" -> git add . --> git push

 34. На веб интерфейсе создать файл bug_report.xml. == touch bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. == git add . --> git commit -m "bug_report.xml"



 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт

 в формате XML. == vim bug_report.xml -->  <short_desc>
                                                      <report id="280464">
                                                       <update>        
                                                       <when>12345144375</when>
                                                       <what>First build performance must be improved</what>
                                                       </update>
                                                       <update>
                                                       <when>12345222394</when>
                                                       <what>API tooling  performance must be improved</what>
                                                       <update>
                                            </short_desc>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. == git add . --> git commit -m "bug_report.xml"

 38. Синхронизировать внешний и локальный репозиторий XML == git pull


===========================================================================================================================================================


TXT


 1. Создать внешний репозиторий c названием TXT. == перейти во вкладку "Repositories"-->
                                                      нажать кнопку "New" -->
                                                      задать имя и выставить необходимые настройки --> 
                                                      нажать  "Creat repository


 2. Клонировать репозиторий TXT на локальный компьютер. == git clone https://github.com/ivanmihalutsa/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.== touch new.txt

 4. Добавить файл под гит. == git add new.txt

 5. Закоммитить файл. ==  git commit -m "touch new.txt"

 6. Отправить файл на внешний GitHub репозиторий. == git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).

 Всё написать в формате TXT. --> vim new.txt --> 1)FIO - Mikhalutsa Ivan Georgievic
                                                 2)age - 36
                                                 3)animal - 0
                                                 4)salary - 400$


 8. Отправить изменения на внешний репозиторий. == git commit -m "new.txt" == git add . == git push

 9. Создать файл preferences.txt == touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. == vim preferences.txt == { "muvie" : "terminator", "favorite TV series" : "supernatural", "favorite food" :"plov", "favorite time of the year" : "winter", "the party you would like to visit" : "Moldova"}

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT == touch sklls.txt --> vim sklls.txt --> 1)Hard Skilss
                                                                                                                                                2)Soft skills

 12. Сделать коммит в одну строку. == git add . 

 13. Отправить сразу 2 файла на внешний репозиторий. == git commit -a -m "MY MESSAGE HERE" --> git add . --> git push

 14. На веб интерфейсе создать файл bug_report.txt. ==  touch bug_report.txt

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. == git add . == git commit -m "bug_report.txt"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. == перейти в "Repositories TXT"-->
                                                                                                 выбрать файл "bug_report.txt" -->
                                                                                                 нажать "Edit this file" -->
                                                                                                 добавить баг репорт в формате TXT --> 1)BUG-REPORT

                                                                                                                                       
2)ID: 1

                                                                                                                                       3)Title: CART - Unable to add new item to a cart
                                                                                                                                       4)Environment: MacBook Air 2018, MacOS Big Sur, Yandex Browser

                                                                                                                                       5)Steps to reproduce:

                                                                                                                                       6)  1. Go to product page
  
                                                                                                                                       7)  2. Press to 'Add to cart button
  
                                                                                                                                       8)  3. Go to cart

                                                                                                                                       9)Priority: High

                                                                                                                                       10)Severity: Critical

                                                                                                                                       11)Expected Result: The cart containes 1 item

                                                                                                                                       12)Actual Result: The cart containes 0 items -->
                                                                                                 нажать  "Commit changes"



 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. == git add . --> git commit -m "bug_report.txt"

 18. Синхронизировать внешний и локальный репозиторий TXT == git pull